{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Sharp Service API",
    "description": "Sharp Services API, is a bunch of API, created to support my client developments",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [   
    {
      "name": "Settings",
      "description": "API for system settings in the system"
    },
    {
      "name": "Tasks",
      "description": "API for tasks in the system"
    },
    {
      "name": "Transactions",
      "description": "API for transactions in the system"
    },
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create new task in system",
        "description": "Create new task in system",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task that we want to create",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all users in system",
        "description": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "parameters": [
        {
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "ID of task that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get task with given ID",
        "responses": {
          "200": {
            "description": "Task is found",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete task with given ID",
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "description": "Task is deleted",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "put": {
        "summary": "Update task with give ID",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task with new values of properties",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task is updated",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all transactions in system",
        "description": "Get all transactions in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transactions"
            }
          },
          "404": {
            "description": "Transaction is not found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create new transaction in system",
        "description": "Create new transaction in system",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Transaction that we want to create",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New transaction is created",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction is not found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/transactions/{transactionId}": {
      "parameters": [
        {
          "name": "transactionId",
          "in": "path",
          "required": true,
          "description": "ID of transaction that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction with given transaction ID",
        "responses": {
          "200": {
            "description": "Transaction is found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "404": {
            "description": "Transaction is not found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      },
      "put": {
        "summary": "Update task with give ID",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task with new values of properties",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task is updated",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Transaction is not found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete task with given ID",
        "tags": [
          "Transactions"
        ],
        "responses": {
          "200": {
            "description": "Task is deleted",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Transaction is not found",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Task": {
      "required": [
        "name",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "status": {
          "type": "string"
        },
        "Created_date": {
          "type": "string"
        }
      }
    },
    "Tasks": {
      "type": "array",
      "$ref": "#/definitions/Task"
    }
  }
}
